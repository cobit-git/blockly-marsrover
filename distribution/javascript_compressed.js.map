{"version":3,"sources":["generators/javascript/mars_rover.js","generators/javascript.js","generators/javascript/colour.js","generators/javascript/lists.js","generators/javascript/logic.js","generators/javascript/loops.js","generators/javascript/math.js","generators/javascript/procedures.js","generators/javascript/text.js","generators/javascript/variables.js","generators/javascript/variables_dynamic.js","generators/javascript/all.js"],"names":["sleep","ms","wakeUpTime","Date","now","Variables","stringUtils","CodeGenerator","inputTypes","Names","NameType","JavaScript","addReservedWords","Object","getOwnPropertyNames","globalThis","join","ORDER_ATOMIC","ORDER_NEW","ORDER_MEMBER","ORDER_FUNCTION_CALL","ORDER_INCREMENT","ORDER_DECREMENT","ORDER_BITWISE_NOT","ORDER_UNARY_PLUS","ORDER_UNARY_NEGATION","ORDER_LOGICAL_NOT","ORDER_TYPEOF","ORDER_VOID","ORDER_DELETE","ORDER_AWAIT","ORDER_EXPONENTIATION","ORDER_MULTIPLICATION","ORDER_DIVISION","ORDER_MODULUS","ORDER_SUBTRACTION","ORDER_ADDITION","ORDER_BITWISE_SHIFT","ORDER_RELATIONAL","ORDER_IN","ORDER_INSTANCEOF","ORDER_EQUALITY","ORDER_BITWISE_AND","ORDER_BITWISE_XOR","ORDER_BITWISE_OR","ORDER_LOGICAL_AND","ORDER_LOGICAL_OR","ORDER_CONDITIONAL","ORDER_ASSIGNMENT","ORDER_YIELD","ORDER_COMMA","ORDER_NONE","ORDER_OVERRIDES","isInitialized","init","JavaScript.init","workspace","getPrototypeOf","call","nameDB_","reset","RESERVED_WORDS_","setVariableMap","getVariableMap","populateVariables","populateProcedures","defvars","devVarList","allDeveloperVariables","i","length","push","getName","DEVELOPER_VARIABLE","variables","allUsedVarModels","getId","VARIABLE","definitions_","finish","JavaScript.finish","code","definitions","values","scrubNakedValue","JavaScript.scrubNakedValue","line","quote_","JavaScript.quote_","string","replace","multiline_quote_","JavaScript.multiline_quote_","split","map","lines","scrub_","JavaScript.scrub_","block","opt_thisOnly","commentCode","outputConnection","targetConnection","comment","getCommentText","wrap","COMMENT_WRAP","prefixLines","inputList","type","VALUE","childBlock","connection","targetBlock","allNestedComments","nextBlock","nextConnection","nextCode","blockToCode","getAdjusted","JavaScript.getAdjusted","atId","opt_delta","opt_negate","opt_order","delta","order","options","oneBasedIndex","defaultAtIndex","innerOrder","outerOrder","at","valueToCode","isNumber","Number","Math","floor","getFieldValue","provideFunction_","functionName","FUNCTION_NAME_PLACEHOLDER_","red","green","blue","c1","c2","ratio","seconds","Blockly","value_console_log","setTimeout","console","log","elements","Array","itemCount_","element","repeatCount","operator","item","mode","where","list","listOrder","Error","cacheList","match","listVar","getDistinctName","value","xVar","getSubstringIndex","listName","opt_at","where1","where2","at1","at2","wherePascalCase","at1Param","at2Param","direction","getCompareFunctionName","input","delimiter","n","STATEMENT_PREFIX","injectId","conditionCode","branchCode","statementToCode","STATEMENT_SUFFIX","INDENT","getInput","OPERATORS","argument0","argument1","defaultArgument","value_if","value_then","value_else","repeats","getField","String","branch","addLoopTrap","loopVar","endVar","until","variable0","increment","up","step","abs","startVar","incVar","indexVar","xfix","loop","getSurroundLoop","suppressPrefixSuffix","tuple","arg","CONSTANTS","PROPERTIES","dropdownProperty","suffix","inputOrder","outputOrder","numberToCheck","divisor","varName","func","argument2","funcName","PROCEDURE","xfix1","loopTrap","INFINITE_LOOP_TRAP","returnValue","xfix2","args","getVars","hasReturnValue_","strRegExp","forceString","test","stringName","indexOf","codeAndOrder","element0","element1","substring","text","textOrder","requiresLengthCall","msg","sub","from","to","exports","moduleExports"],"mappings":"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","file":"javascript_compressed.js","sourcesContent":["/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generating JavaScript for mars rover blocks.\n */\n'use strict';\n\ngoog.module('Blockly.JavaScript.mars_rover');\n\nfunction sleep(ms) {\n  const wakeUpTime = Date.now() + ms;\n  while (Date.now() < wakeUpTime) {}\n}\n\n//const stringUtils = goog.require('Blockly.utils.string');\n//const {NameType} = goog.require('Blockly.Names');\nconst {javascriptGenerator: JavaScript} = goog.require('Blockly.JavaScript');\n\nJavaScript['move_forward'] = function(block) {\n  // Append to a variable in place.\n  //const varName = JavaScript.nameDB_.getName(\n  //    block.getFieldValue('SERVO'), NameType.VARIABLE);\n  //const value = JavaScript.valueToCode(block, 'TEXT',\n  //    JavaScript.ORDER_NONE) || \"''\";\n  //const speed = block.getFieldValue('SPEED');\n  //const code =  'motor_speed = '+speed+';\\n document.dispatchEvent(event_move_forward);\\n ';\n  // for acron \n  const code = \"move_forward_acorn();\\nwaitForSeconds(0.3);\\n\";\n  \n  return code;\n};\n\nJavaScript['move_backward'] = function(block) {\n  // Append to a variable in place.\n  //const varName = JavaScript.nameDB_.getName(\n  //    block.getFieldValue('SERVO'), NameType.VARIABLE);\n  //const value = JavaScript.valueToCode(block, 'TEXT',\n  //    JavaScript.ORDER_NONE) || \"''\";\n  //const speed = block.getFieldValue('SPEED');\n  //const code =  'motor_speed = '+speed+';\\n document.dispatchEvent(event_move_forward);\\n ';\n  // for acron \n  const code = \"move_backward_acorn();\\nwaitForSeconds(0.3);\\n\";\n  \n  return code;\n};\n\n\nJavaScript['rover_stop'] = function(block) {\n  // Append to a variable in place.\n  //const varName = JavaScript.nameDB_.getName(\n  //    block.getFieldValue('SERVO'), NameType.VARIABLE);\n  //const value = JavaScript.valueToCode(block, 'TEXT',\n  //    JavaScript.ORDER_NONE) || \"''\";\n  //const code =  'document.dispatchEvent(event_rover_stop);\\n';\n  const code = \"rover_stop_acorn();\\nwaitForSeconds(0.3);\\n\";\n  return code;\n};\n\nJavaScript['object_detect'] = function(block) {\n  // Append to a variable in place.\n  //const varName = JavaScript.nameDB_.getName(\n  //    block.getFieldValue('SERVO'), NameType.VARIABLE);\n  //const value = JavaScript.valueToCode(block, 'TEXT',\n  //    JavaScript.ORDER_NONE) || \"''\";\n  //const code =  'document.dispatchEvent(event_rover_stop);\\n';\n  const code = \"object_detect_acorn();\\n\";\n  return code;\n};\n\n\nJavaScript['wait_seconds'] = function(block) {\n  const seconds = Number(block.getFieldValue('SECONDS'));\n  const code = 'waitForSeconds(' + seconds + ');\\n';\n  return code;\n};\n\nJavaScript['turn_left'] = function(block) {\n  //const degrees = Number(block.getFieldValue('DEGREES'));\n  const code = 'turn_left_acorn();\\nwaitForSeconds(0.3);\\n';\n  return code;\n};\n\nJavaScript['turn_right'] = function(block) {\n  //const degrees = Number(block.getFieldValue('DEGREES'));\n  const code = 'turn_right_acorn();waitForSeconds(0.3);\\n\\n';\n  return code;\n};\n\n\nJavaScript['led_on'] = function(block) {\n  // TODO: Assemble JavaScript into code variable.\n  const code = \"led_on_acorn();\\nwaitForSeconds(0.3);\\n\";\n  return code;\n};\n\nJavaScript['led_off'] = function(block) {\n  // TODO: Assemble JavaScript into code variable.\n  const code = \"led_off_acorn();\\nwaitForSeconds(0.3);\\n\";\n  return code;\n};\n\nJavaScript['console_print'] = function(block) {\n  var value_console_log = Blockly.JavaScript.valueToCode(block, 'CONSOLE_LOG', Blockly.JavaScript.ORDER_ATOMIC);\n  // TODO: Assemble JavaScript into code variable.\n  var code = 'console.log('+value_console_log+')\\n';\n  return code;\n};\n\nJavaScript['read_angle'] = function(block) {\n  // TODO: Assemble JavaScript into code variable.\n  //var code = '...';\n  // TODO: Change ORDER_NONE to the correct strength.\n  const code = \"read_angle_acorn()\";\n  return [code, Blockly.JavaScript.ORDER_NONE];\n};\n\nJavaScript['read_sensor1'] = function(block) {\n  // TODO: Assemble JavaScript into code variable.\n  //var code = '...';\n  // TODO: Change ORDER_NONE to the correct strength.\n  const code = \"read_front_sensor_acorn()\";\n  return [code, Blockly.JavaScript.ORDER_NONE];\n};\n\nJavaScript['read_sensor2'] = function(block) {\n  // TODO: Assemble JavaScript into code variable.\n  //var code = '...';\n  // TODO: Change ORDER_NONE to the correct strength.\n  const code = \"read_rear_sensor_acorn()\";\n  return [code, Blockly.JavaScript.ORDER_NONE];\n};\n\nsetTimeout(function() {\n  console.log('Works!');\n}, 3000);\n","/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Helper functions for generating JavaScript for blocks.\n * @suppress {checkTypes|globalThis}\n */\n'use strict';\n\ngoog.module('Blockly.JavaScript');\n\nconst Variables = goog.require('Blockly.Variables');\nconst stringUtils = goog.require('Blockly.utils.string');\nconst {Block} = goog.requireType('Blockly.Block');\nconst {CodeGenerator} = goog.require('Blockly.CodeGenerator');\nconst {inputTypes} = goog.require('Blockly.inputTypes');\nconst {Names, NameType} = goog.require('Blockly.Names');\nconst {Workspace} = goog.requireType('Blockly.Workspace');\n\n\n/**\n * JavaScript code generator.\n * @type {!CodeGenerator}\n */\nconst JavaScript = new CodeGenerator('JavaScript');\n\n/**\n * List of illegal variable names.\n * This is not intended to be a security feature.  Blockly is 100% client-side,\n * so bypassing this list is trivial.  This is intended to prevent users from\n * accidentally clobbering a built-in object or function.\n */\nJavaScript.addReservedWords(\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#Keywords\n    'break,case,catch,class,const,continue,debugger,default,delete,do,else,export,extends,finally,for,function,if,import,in,instanceof,new,return,super,switch,this,throw,try,typeof,var,void,while,with,yield,' +\n    'enum,' +\n    'implements,interface,let,package,private,protected,public,static,' +\n    'await,' +\n    'null,true,false,' +\n    // Magic variable.\n    'arguments,' +\n    // Everything in the current environment (835 items in Chrome, 104 in Node).\n    Object.getOwnPropertyNames(globalThis).join(','));\n\n/**\n * Order of operation ENUMs.\n * https://developer.mozilla.org/en/JavaScript/Reference/Operators/Operator_Precedence\n */\nJavaScript.ORDER_ATOMIC = 0;            // 0 \"\" ...\nJavaScript.ORDER_NEW = 1.1;             // new\nJavaScript.ORDER_MEMBER = 1.2;          // . []\nJavaScript.ORDER_FUNCTION_CALL = 2;     // ()\nJavaScript.ORDER_INCREMENT = 3;         // ++\nJavaScript.ORDER_DECREMENT = 3;         // --\nJavaScript.ORDER_BITWISE_NOT = 4.1;     // ~\nJavaScript.ORDER_UNARY_PLUS = 4.2;      // +\nJavaScript.ORDER_UNARY_NEGATION = 4.3;  // -\nJavaScript.ORDER_LOGICAL_NOT = 4.4;     // !\nJavaScript.ORDER_TYPEOF = 4.5;          // typeof\nJavaScript.ORDER_VOID = 4.6;            // void\nJavaScript.ORDER_DELETE = 4.7;          // delete\nJavaScript.ORDER_AWAIT = 4.8;           // await\nJavaScript.ORDER_EXPONENTIATION = 5.0;  // **\nJavaScript.ORDER_MULTIPLICATION = 5.1;  // *\nJavaScript.ORDER_DIVISION = 5.2;        // /\nJavaScript.ORDER_MODULUS = 5.3;         // %\nJavaScript.ORDER_SUBTRACTION = 6.1;     // -\nJavaScript.ORDER_ADDITION = 6.2;        // +\nJavaScript.ORDER_BITWISE_SHIFT = 7;     // << >> >>>\nJavaScript.ORDER_RELATIONAL = 8;        // < <= > >=\nJavaScript.ORDER_IN = 8;                // in\nJavaScript.ORDER_INSTANCEOF = 8;        // instanceof\nJavaScript.ORDER_EQUALITY = 9;          // == != === !==\nJavaScript.ORDER_BITWISE_AND = 10;      // &\nJavaScript.ORDER_BITWISE_XOR = 11;      // ^\nJavaScript.ORDER_BITWISE_OR = 12;       // |\nJavaScript.ORDER_LOGICAL_AND = 13;      // &&\nJavaScript.ORDER_LOGICAL_OR = 14;       // ||\nJavaScript.ORDER_CONDITIONAL = 15;      // ?:\nJavaScript.ORDER_ASSIGNMENT = 16;       // = += -= **= *= /= %= <<= >>= ...\nJavaScript.ORDER_YIELD = 17;            // yield\nJavaScript.ORDER_COMMA = 18;            // ,\nJavaScript.ORDER_NONE = 99;             // (...)\n\n/**\n * List of outer-inner pairings that do NOT require parentheses.\n * @type {!Array<!Array<number>>}\n */\nJavaScript.ORDER_OVERRIDES = [\n  // (foo()).bar -> foo().bar\n  // (foo())[0] -> foo()[0]\n  [JavaScript.ORDER_FUNCTION_CALL, JavaScript.ORDER_MEMBER],\n  // (foo())() -> foo()()\n  [JavaScript.ORDER_FUNCTION_CALL, JavaScript.ORDER_FUNCTION_CALL],\n  // (foo.bar).baz -> foo.bar.baz\n  // (foo.bar)[0] -> foo.bar[0]\n  // (foo[0]).bar -> foo[0].bar\n  // (foo[0])[1] -> foo[0][1]\n  [JavaScript.ORDER_MEMBER, JavaScript.ORDER_MEMBER],\n  // (foo.bar)() -> foo.bar()\n  // (foo[0])() -> foo[0]()\n  [JavaScript.ORDER_MEMBER, JavaScript.ORDER_FUNCTION_CALL],\n\n  // !(!foo) -> !!foo\n  [JavaScript.ORDER_LOGICAL_NOT, JavaScript.ORDER_LOGICAL_NOT],\n  // a * (b * c) -> a * b * c\n  [JavaScript.ORDER_MULTIPLICATION, JavaScript.ORDER_MULTIPLICATION],\n  // a + (b + c) -> a + b + c\n  [JavaScript.ORDER_ADDITION, JavaScript.ORDER_ADDITION],\n  // a && (b && c) -> a && b && c\n  [JavaScript.ORDER_LOGICAL_AND, JavaScript.ORDER_LOGICAL_AND],\n  // a || (b || c) -> a || b || c\n  [JavaScript.ORDER_LOGICAL_OR, JavaScript.ORDER_LOGICAL_OR]\n];\n\n/**\n * Whether the init method has been called.\n * @type {?boolean}\n */\nJavaScript.isInitialized = false;\n\n/**\n * Initialise the database of variable names.\n * @param {!Workspace} workspace Workspace to generate code from.\n */\nJavaScript.init = function(workspace) {\n  // Call Blockly.CodeGenerator's init.\n  Object.getPrototypeOf(this).init.call(this);\n\n  if (!this.nameDB_) {\n    this.nameDB_ = new Names(this.RESERVED_WORDS_);\n  } else {\n    this.nameDB_.reset();\n  }\n\n  this.nameDB_.setVariableMap(workspace.getVariableMap());\n  this.nameDB_.populateVariables(workspace);\n  this.nameDB_.populateProcedures(workspace);\n\n  const defvars = [];\n  // Add developer variables (not created or named by the user).\n  const devVarList = Variables.allDeveloperVariables(workspace);\n  for (let i = 0; i < devVarList.length; i++) {\n    defvars.push(\n        this.nameDB_.getName(devVarList[i], NameType.DEVELOPER_VARIABLE));\n  }\n\n  // Add user variables, but only ones that are being used.\n  const variables = Variables.allUsedVarModels(workspace);\n  for (let i = 0; i < variables.length; i++) {\n    defvars.push(this.nameDB_.getName(variables[i].getId(), NameType.VARIABLE));\n  }\n\n  // Declare all of the variables.\n  if (defvars.length) {\n    this.definitions_['variables'] = 'var ' + defvars.join(', ') + ';';\n  }\n  this.isInitialized = true;\n};\n\n/**\n * Prepend the generated code with the variable definitions.\n * @param {string} code Generated code.\n * @return {string} Completed code.\n */\nJavaScript.finish = function(code) {\n  // Convert the definitions dictionary into a list.\n  const definitions = Object.values(this.definitions_);\n  // Call Blockly.CodeGenerator's finish.\n  code = Object.getPrototypeOf(this).finish.call(this, code);\n  this.isInitialized = false;\n\n  this.nameDB_.reset();\n  return definitions.join('\\n\\n') + '\\n\\n\\n' + code;\n};\n\n/**\n * Naked values are top-level blocks with outputs that aren't plugged into\n * anything.  A trailing semicolon is needed to make this legal.\n * @param {string} line Line of generated code.\n * @return {string} Legal line of code.\n */\nJavaScript.scrubNakedValue = function(line) {\n  return line + ';\\n';\n};\n\n/**\n * Encode a string as a properly escaped JavaScript string, complete with\n * quotes.\n * @param {string} string Text to encode.\n * @return {string} JavaScript string.\n * @protected\n */\nJavaScript.quote_ = function(string) {\n  // Can't use goog.string.quote since Google's style guide recommends\n  // JS string literals use single quotes.\n  string = string.replace(/\\\\/g, '\\\\\\\\')\n               .replace(/\\n/g, '\\\\\\n')\n               .replace(/'/g, '\\\\\\'');\n  return '\\'' + string + '\\'';\n};\n\n/**\n * Encode a string as a properly escaped multiline JavaScript string, complete\n * with quotes.\n * @param {string} string Text to encode.\n * @return {string} JavaScript string.\n * @protected\n */\nJavaScript.multiline_quote_ = function(string) {\n  // Can't use goog.string.quote since Google's style guide recommends\n  // JS string literals use single quotes.\n  const lines = string.split(/\\n/g).map(this.quote_);\n  return lines.join(' + \\'\\\\n\\' +\\n');\n};\n\n/**\n * Common tasks for generating JavaScript from blocks.\n * Handles comments for the specified block and any connected value blocks.\n * Calls any statements following this block.\n * @param {!Block} block The current block.\n * @param {string} code The JavaScript code created for this block.\n * @param {boolean=} opt_thisOnly True to generate code for only this statement.\n * @return {string} JavaScript code with comments and subsequent blocks added.\n * @protected\n */\nJavaScript.scrub_ = function(block, code, opt_thisOnly) {\n  let commentCode = '';\n  // Only collect comments for blocks that aren't inline.\n  if (!block.outputConnection || !block.outputConnection.targetConnection) {\n    // Collect comment for this block.\n    let comment = block.getCommentText();\n    if (comment) {\n      comment = stringUtils.wrap(comment, this.COMMENT_WRAP - 3);\n      commentCode += this.prefixLines(comment + '\\n', '// ');\n    }\n    // Collect comments for all value arguments.\n    // Don't collect comments for nested statements.\n    for (let i = 0; i < block.inputList.length; i++) {\n      if (block.inputList[i].type === inputTypes.VALUE) {\n        const childBlock = block.inputList[i].connection.targetBlock();\n        if (childBlock) {\n          comment = this.allNestedComments(childBlock);\n          if (comment) {\n            commentCode += this.prefixLines(comment, '// ');\n          }\n        }\n      }\n    }\n  }\n  const nextBlock = block.nextConnection && block.nextConnection.targetBlock();\n  const nextCode = opt_thisOnly ? '' : this.blockToCode(nextBlock);\n  return commentCode + code + nextCode;\n};\n\n/**\n * Gets a property and adjusts the value while taking into account indexing.\n * @param {!Block} block The block.\n * @param {string} atId The property ID of the element to get.\n * @param {number=} opt_delta Value to add.\n * @param {boolean=} opt_negate Whether to negate the value.\n * @param {number=} opt_order The highest order acting on this value.\n * @return {string|number}\n */\nJavaScript.getAdjusted = function(\n    block, atId, opt_delta, opt_negate, opt_order) {\n  let delta = opt_delta || 0;\n  let order = opt_order || this.ORDER_NONE;\n  if (block.workspace.options.oneBasedIndex) {\n    delta--;\n  }\n  const defaultAtIndex = block.workspace.options.oneBasedIndex ? '1' : '0';\n\n  let innerOrder;\n  let outerOrder = order;\n  if (delta > 0) {\n    outerOrder = this.ORDER_ADDITION;\n    innerOrder = this.ORDER_ADDITION;\n  } else if (delta < 0) {\n    outerOrder = this.ORDER_SUBTRACTION;\n    innerOrder = this.ORDER_SUBTRACTION;\n  } else if (opt_negate) {\n    outerOrder = this.ORDER_UNARY_NEGATION;\n    innerOrder = this.ORDER_UNARY_NEGATION;\n  }\n\n  let at = this.valueToCode(block, atId, outerOrder) || defaultAtIndex;\n\n  if (stringUtils.isNumber(at)) {\n    // If the index is a naked number, adjust it right now.\n    at = Number(at) + delta;\n    if (opt_negate) {\n      at = -at;\n    }\n  } else {\n    // If the index is dynamic, adjust it in code.\n    if (delta > 0) {\n      at = at + ' + ' + delta;\n    } else if (delta < 0) {\n      at = at + ' - ' + -delta;\n    }\n    if (opt_negate) {\n      if (delta) {\n        at = '-(' + at + ')';\n      } else {\n        at = '-' + at;\n      }\n    }\n    innerOrder = Math.floor(innerOrder);\n    order = Math.floor(order);\n    if (innerOrder && order >= innerOrder) {\n      at = '(' + at + ')';\n    }\n  }\n  return at;\n};\n\nexports.javascriptGenerator = JavaScript;\n","/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generating JavaScript for colour blocks.\n */\n'use strict';\n\ngoog.module('Blockly.JavaScript.colour');\n\nconst {javascriptGenerator: JavaScript} = goog.require('Blockly.JavaScript');\n\n\nJavaScript['colour_picker'] = function(block) {\n  // Colour picker.\n  const code = JavaScript.quote_(block.getFieldValue('COLOUR'));\n  return [code, JavaScript.ORDER_ATOMIC];\n};\n\nJavaScript['colour_random'] = function(block) {\n  // Generate a random colour.\n  const functionName = JavaScript.provideFunction_('colourRandom', `\nfunction ${JavaScript.FUNCTION_NAME_PLACEHOLDER_}() {\n  var num = Math.floor(Math.random() * Math.pow(2, 24));\n  return '#' + ('00000' + num.toString(16)).substr(-6);\n}\n`);\n  const code = functionName + '()';\n  return [code, JavaScript.ORDER_FUNCTION_CALL];\n};\n\nJavaScript['colour_rgb'] = function(block) {\n  // Compose a colour from RGB components expressed as percentages.\n  const red = JavaScript.valueToCode(block, 'RED', JavaScript.ORDER_NONE) || 0;\n  const green =\n      JavaScript.valueToCode(block, 'GREEN', JavaScript.ORDER_NONE) || 0;\n  const blue =\n      JavaScript.valueToCode(block, 'BLUE', JavaScript.ORDER_NONE) || 0;\n  const functionName = JavaScript.provideFunction_('colourRgb', `\nfunction ${JavaScript.FUNCTION_NAME_PLACEHOLDER_}(r, g, b) {\n  r = Math.max(Math.min(Number(r), 100), 0) * 2.55;\n  g = Math.max(Math.min(Number(g), 100), 0) * 2.55;\n  b = Math.max(Math.min(Number(b), 100), 0) * 2.55;\n  r = ('0' + (Math.round(r) || 0).toString(16)).slice(-2);\n  g = ('0' + (Math.round(g) || 0).toString(16)).slice(-2);\n  b = ('0' + (Math.round(b) || 0).toString(16)).slice(-2);\n  return '#' + r + g + b;\n}\n`);\n  const code = functionName + '(' + red + ', ' + green + ', ' + blue + ')';\n  return [code, JavaScript.ORDER_FUNCTION_CALL];\n};\n\nJavaScript['colour_blend'] = function(block) {\n  // Blend two colours together.\n  const c1 = JavaScript.valueToCode(block, 'COLOUR1', JavaScript.ORDER_NONE) ||\n      \"'#000000'\";\n  const c2 = JavaScript.valueToCode(block, 'COLOUR2', JavaScript.ORDER_NONE) ||\n      \"'#000000'\";\n  const ratio =\n      JavaScript.valueToCode(block, 'RATIO', JavaScript.ORDER_NONE) || 0.5;\n  const functionName = JavaScript.provideFunction_('colourBlend', `\nfunction ${JavaScript.FUNCTION_NAME_PLACEHOLDER_}(c1, c2, ratio) {\n  ratio = Math.max(Math.min(Number(ratio), 1), 0);\n  var r1 = parseInt(c1.substring(1, 3), 16);\n  var g1 = parseInt(c1.substring(3, 5), 16);\n  var b1 = parseInt(c1.substring(5, 7), 16);\n  var r2 = parseInt(c2.substring(1, 3), 16);\n  var g2 = parseInt(c2.substring(3, 5), 16);\n  var b2 = parseInt(c2.substring(5, 7), 16);\n  var r = Math.round(r1 * (1 - ratio) + r2 * ratio);\n  var g = Math.round(g1 * (1 - ratio) + g2 * ratio);\n  var b = Math.round(b1 * (1 - ratio) + b2 * ratio);\n  r = ('0' + (r || 0).toString(16)).slice(-2);\n  g = ('0' + (g || 0).toString(16)).slice(-2);\n  b = ('0' + (b || 0).toString(16)).slice(-2);\n  return '#' + r + g + b;\n}\n`);\n  const code = functionName + '(' + c1 + ', ' + c2 + ', ' + ratio + ')';\n  return [code, JavaScript.ORDER_FUNCTION_CALL];\n};\n","/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generating JavaScript for list blocks.\n * @suppress {missingRequire}\n */\n'use strict';\n\ngoog.module('Blockly.JavaScript.lists');\n\nconst {NameType} = goog.require('Blockly.Names');\nconst {javascriptGenerator: JavaScript} = goog.require('Blockly.JavaScript');\n\n\nJavaScript['lists_create_empty'] = function(block) {\n  // Create an empty list.\n  return ['[]', JavaScript.ORDER_ATOMIC];\n};\n\nJavaScript['lists_create_with'] = function(block) {\n  // Create a list with any number of elements of any type.\n  const elements = new Array(block.itemCount_);\n  for (let i = 0; i < block.itemCount_; i++) {\n    elements[i] =\n        JavaScript.valueToCode(block, 'ADD' + i, JavaScript.ORDER_NONE) ||\n        'null';\n  }\n  const code = '[' + elements.join(', ') + ']';\n  return [code, JavaScript.ORDER_ATOMIC];\n};\n\nJavaScript['lists_repeat'] = function(block) {\n  // Create a list with one element repeated.\n  const functionName = JavaScript.provideFunction_('listsRepeat', `\nfunction ${JavaScript.FUNCTION_NAME_PLACEHOLDER_}(value, n) {\n  var array = [];\n  for (var i = 0; i < n; i++) {\n    array[i] = value;\n  }\n  return array;\n}\n`);\n  const element =\n      JavaScript.valueToCode(block, 'ITEM', JavaScript.ORDER_NONE) || 'null';\n  const repeatCount =\n      JavaScript.valueToCode(block, 'NUM', JavaScript.ORDER_NONE) || '0';\n  const code = functionName + '(' + element + ', ' + repeatCount + ')';\n  return [code, JavaScript.ORDER_FUNCTION_CALL];\n};\n\nJavaScript['lists_length'] = function(block) {\n  // String or array length.\n  const list =\n      JavaScript.valueToCode(block, 'VALUE', JavaScript.ORDER_MEMBER) || '[]';\n  return [list + '.length', JavaScript.ORDER_MEMBER];\n};\n\nJavaScript['lists_isEmpty'] = function(block) {\n  // Is the string null or array empty?\n  const list =\n      JavaScript.valueToCode(block, 'VALUE', JavaScript.ORDER_MEMBER) || '[]';\n  return ['!' + list + '.length', JavaScript.ORDER_LOGICAL_NOT];\n};\n\nJavaScript['lists_indexOf'] = function(block) {\n  // Find an item in the list.\n  const operator =\n      block.getFieldValue('END') === 'FIRST' ? 'indexOf' : 'lastIndexOf';\n  const item =\n      JavaScript.valueToCode(block, 'FIND', JavaScript.ORDER_NONE) || \"''\";\n  const list =\n      JavaScript.valueToCode(block, 'VALUE', JavaScript.ORDER_MEMBER) || '[]';\n  const code = list + '.' + operator + '(' + item + ')';\n  if (block.workspace.options.oneBasedIndex) {\n    return [code + ' + 1', JavaScript.ORDER_ADDITION];\n  }\n  return [code, JavaScript.ORDER_FUNCTION_CALL];\n};\n\nJavaScript['lists_getIndex'] = function(block) {\n  // Get element at index.\n  // Note: Until January 2013 this block did not have MODE or WHERE inputs.\n  const mode = block.getFieldValue('MODE') || 'GET';\n  const where = block.getFieldValue('WHERE') || 'FROM_START';\n  const listOrder =\n      (where === 'RANDOM') ? JavaScript.ORDER_NONE : JavaScript.ORDER_MEMBER;\n  const list = JavaScript.valueToCode(block, 'VALUE', listOrder) || '[]';\n\n  switch (where) {\n    case ('FIRST'):\n      if (mode === 'GET') {\n        const code = list + '[0]';\n        return [code, JavaScript.ORDER_MEMBER];\n      } else if (mode === 'GET_REMOVE') {\n        const code = list + '.shift()';\n        return [code, JavaScript.ORDER_MEMBER];\n      } else if (mode === 'REMOVE') {\n        return list + '.shift();\\n';\n      }\n      break;\n    case ('LAST'):\n      if (mode === 'GET') {\n        const code = list + '.slice(-1)[0]';\n        return [code, JavaScript.ORDER_MEMBER];\n      } else if (mode === 'GET_REMOVE') {\n        const code = list + '.pop()';\n        return [code, JavaScript.ORDER_MEMBER];\n      } else if (mode === 'REMOVE') {\n        return list + '.pop();\\n';\n      }\n      break;\n    case ('FROM_START'): {\n      const at = JavaScript.getAdjusted(block, 'AT');\n      if (mode === 'GET') {\n        const code = list + '[' + at + ']';\n        return [code, JavaScript.ORDER_MEMBER];\n      } else if (mode === 'GET_REMOVE') {\n        const code = list + '.splice(' + at + ', 1)[0]';\n        return [code, JavaScript.ORDER_FUNCTION_CALL];\n      } else if (mode === 'REMOVE') {\n        return list + '.splice(' + at + ', 1);\\n';\n      }\n      break;\n    }\n    case ('FROM_END'): {\n      const at = JavaScript.getAdjusted(block, 'AT', 1, true);\n      if (mode === 'GET') {\n        const code = list + '.slice(' + at + ')[0]';\n        return [code, JavaScript.ORDER_FUNCTION_CALL];\n      } else if (mode === 'GET_REMOVE') {\n        const code = list + '.splice(' + at + ', 1)[0]';\n        return [code, JavaScript.ORDER_FUNCTION_CALL];\n      } else if (mode === 'REMOVE') {\n        return list + '.splice(' + at + ', 1);';\n      }\n      break;\n    }\n    case ('RANDOM'): {\n      const functionName = JavaScript.provideFunction_('listsGetRandomItem', `\nfunction ${JavaScript.FUNCTION_NAME_PLACEHOLDER_}(list, remove) {\n  var x = Math.floor(Math.random() * list.length);\n  if (remove) {\n    return list.splice(x, 1)[0];\n  } else {\n    return list[x];\n  }\n}\n`);\n      const code = functionName + '(' + list + ', ' + (mode !== 'GET') + ')';\n      if (mode === 'GET' || mode === 'GET_REMOVE') {\n        return [code, JavaScript.ORDER_FUNCTION_CALL];\n      } else if (mode === 'REMOVE') {\n        return code + ';\\n';\n      }\n      break;\n    }\n  }\n  throw Error('Unhandled combination (lists_getIndex).');\n};\n\nJavaScript['lists_setIndex'] = function(block) {\n  // Set element at index.\n  // Note: Until February 2013 this block did not have MODE or WHERE inputs.\n  let list =\n      JavaScript.valueToCode(block, 'LIST', JavaScript.ORDER_MEMBER) || '[]';\n  const mode = block.getFieldValue('MODE') || 'GET';\n  const where = block.getFieldValue('WHERE') || 'FROM_START';\n  const value =\n      JavaScript.valueToCode(block, 'TO', JavaScript.ORDER_ASSIGNMENT) ||\n      'null';\n  // Cache non-trivial values to variables to prevent repeated look-ups.\n  // Closure, which accesses and modifies 'list'.\n  function cacheList() {\n    if (list.match(/^\\w+$/)) {\n      return '';\n    }\n    const listVar =\n        JavaScript.nameDB_.getDistinctName('tmpList', NameType.VARIABLE);\n    const code = 'var ' + listVar + ' = ' + list + ';\\n';\n    list = listVar;\n    return code;\n  }\n  switch (where) {\n    case ('FIRST'):\n      if (mode === 'SET') {\n        return list + '[0] = ' + value + ';\\n';\n      } else if (mode === 'INSERT') {\n        return list + '.unshift(' + value + ');\\n';\n      }\n      break;\n    case ('LAST'):\n      if (mode === 'SET') {\n        let code = cacheList();\n        code += list + '[' + list + '.length - 1] = ' + value + ';\\n';\n        return code;\n      } else if (mode === 'INSERT') {\n        return list + '.push(' + value + ');\\n';\n      }\n      break;\n    case ('FROM_START'): {\n      const at = JavaScript.getAdjusted(block, 'AT');\n      if (mode === 'SET') {\n        return list + '[' + at + '] = ' + value + ';\\n';\n      } else if (mode === 'INSERT') {\n        return list + '.splice(' + at + ', 0, ' + value + ');\\n';\n      }\n      break;\n    }\n    case ('FROM_END'): {\n      const at = JavaScript.getAdjusted(\n          block, 'AT', 1, false, JavaScript.ORDER_SUBTRACTION);\n      let code = cacheList();\n      if (mode === 'SET') {\n        code += list + '[' + list + '.length - ' + at + '] = ' + value + ';\\n';\n        return code;\n      } else if (mode === 'INSERT') {\n        code += list + '.splice(' + list + '.length - ' + at + ', 0, ' + value +\n            ');\\n';\n        return code;\n      }\n      break;\n    }\n    case ('RANDOM'): {\n      let code = cacheList();\n      const xVar =\n          JavaScript.nameDB_.getDistinctName('tmpX', NameType.VARIABLE);\n      code += 'var ' + xVar + ' = Math.floor(Math.random() * ' + list +\n          '.length);\\n';\n      if (mode === 'SET') {\n        code += list + '[' + xVar + '] = ' + value + ';\\n';\n        return code;\n      } else if (mode === 'INSERT') {\n        code += list + '.splice(' + xVar + ', 0, ' + value + ');\\n';\n        return code;\n      }\n      break;\n    }\n  }\n  throw Error('Unhandled combination (lists_setIndex).');\n};\n\n/**\n * Returns an expression calculating the index into a list.\n * @param {string} listName Name of the list, used to calculate length.\n * @param {string} where The method of indexing, selected by dropdown in Blockly\n * @param {string=} opt_at The optional offset when indexing from start/end.\n * @return {string|undefined} Index expression.\n */\nconst getSubstringIndex = function(listName, where, opt_at) {\n  if (where === 'FIRST') {\n    return '0';\n  } else if (where === 'FROM_END') {\n    return listName + '.length - 1 - ' + opt_at;\n  } else if (where === 'LAST') {\n    return listName + '.length - 1';\n  } else {\n    return opt_at;\n  }\n};\n\nJavaScript['lists_getSublist'] = function(block) {\n  // Get sublist.\n  const list =\n      JavaScript.valueToCode(block, 'LIST', JavaScript.ORDER_MEMBER) || '[]';\n  const where1 = block.getFieldValue('WHERE1');\n  const where2 = block.getFieldValue('WHERE2');\n  let code;\n  if (where1 === 'FIRST' && where2 === 'LAST') {\n    code = list + '.slice(0)';\n  } else if (\n      list.match(/^\\w+$/) ||\n      (where1 !== 'FROM_END' && where2 === 'FROM_START')) {\n    // If the list is a variable or doesn't require a call for length, don't\n    // generate a helper function.\n    let at1;\n    switch (where1) {\n      case 'FROM_START':\n        at1 = JavaScript.getAdjusted(block, 'AT1');\n        break;\n      case 'FROM_END':\n        at1 = JavaScript.getAdjusted(\n            block, 'AT1', 1, false, JavaScript.ORDER_SUBTRACTION);\n        at1 = list + '.length - ' + at1;\n        break;\n      case 'FIRST':\n        at1 = '0';\n        break;\n      default:\n        throw Error('Unhandled option (lists_getSublist).');\n    }\n    let at2;\n    switch (where2) {\n      case 'FROM_START':\n        at2 = JavaScript.getAdjusted(block, 'AT2', 1);\n        break;\n      case 'FROM_END':\n        at2 = JavaScript.getAdjusted(\n            block, 'AT2', 0, false, JavaScript.ORDER_SUBTRACTION);\n        at2 = list + '.length - ' + at2;\n        break;\n      case 'LAST':\n        at2 = list + '.length';\n        break;\n      default:\n        throw Error('Unhandled option (lists_getSublist).');\n    }\n    code = list + '.slice(' + at1 + ', ' + at2 + ')';\n  } else {\n    const at1 = JavaScript.getAdjusted(block, 'AT1');\n    const at2 = JavaScript.getAdjusted(block, 'AT2');\n    const wherePascalCase = {\n      'FIRST': 'First',\n      'LAST': 'Last',\n      'FROM_START': 'FromStart',\n      'FROM_END': 'FromEnd',\n    };\n    // The value for 'FROM_END' and'FROM_START' depends on `at` so\n    // we add it as a parameter.\n    const at1Param =\n        (where1 === 'FROM_END' || where1 === 'FROM_START') ? ', at1' : '';\n    const at2Param =\n        (where2 === 'FROM_END' || where2 === 'FROM_START') ? ', at2' : '';\n    const functionName = JavaScript.provideFunction_(\n        'subsequence' + wherePascalCase[where1] + wherePascalCase[where2], `\nfunction ${JavaScript.FUNCTION_NAME_PLACEHOLDER_}(sequence${at1Param}${at2Param}) {\n  var start = ${getSubstringIndex('sequence', where1, 'at1')};\n  var end = ${getSubstringIndex('sequence', where2, 'at2')} + 1;\n  return sequence.slice(start, end);\n}\n`);\n    code = functionName + '(' + list +\n        // The value for 'FROM_END' and 'FROM_START' depends on `at` so we\n        // pass it.\n        ((where1 === 'FROM_END' || where1 === 'FROM_START') ? ', ' + at1 : '') +\n        ((where2 === 'FROM_END' || where2 === 'FROM_START') ? ', ' + at2 : '') +\n        ')';\n  }\n  return [code, JavaScript.ORDER_FUNCTION_CALL];\n};\n\nJavaScript['lists_sort'] = function(block) {\n  // Block for sorting a list.\n  const list =\n      JavaScript.valueToCode(block, 'LIST', JavaScript.ORDER_FUNCTION_CALL) ||\n      '[]';\n  const direction = block.getFieldValue('DIRECTION') === '1' ? 1 : -1;\n  const type = block.getFieldValue('TYPE');\n  const getCompareFunctionName =\n      JavaScript.provideFunction_('listsGetSortCompare', `\nfunction ${JavaScript.FUNCTION_NAME_PLACEHOLDER_}(type, direction) {\n  var compareFuncs = {\n    'NUMERIC': function(a, b) {\n        return Number(a) - Number(b); },\n    'TEXT': function(a, b) {\n        return String(a) > String(b) ? 1 : -1; },\n    'IGNORE_CASE': function(a, b) {\n        return String(a).toLowerCase() > String(b).toLowerCase() ? 1 : -1; },\n  };\n  var compare = compareFuncs[type];\n  return function(a, b) { return compare(a, b) * direction; };\n}\n      `);\n  return [\n    list + '.slice().sort(' + getCompareFunctionName + '(\"' + type + '\", ' +\n        direction + '))',\n    JavaScript.ORDER_FUNCTION_CALL\n  ];\n};\n\nJavaScript['lists_split'] = function(block) {\n  // Block for splitting text into a list, or joining a list into text.\n  let input = JavaScript.valueToCode(block, 'INPUT', JavaScript.ORDER_MEMBER);\n  const delimiter =\n      JavaScript.valueToCode(block, 'DELIM', JavaScript.ORDER_NONE) || \"''\";\n  const mode = block.getFieldValue('MODE');\n  let functionName;\n  if (mode === 'SPLIT') {\n    if (!input) {\n      input = \"''\";\n    }\n    functionName = 'split';\n  } else if (mode === 'JOIN') {\n    if (!input) {\n      input = '[]';\n    }\n    functionName = 'join';\n  } else {\n    throw Error('Unknown mode: ' + mode);\n  }\n  const code = input + '.' + functionName + '(' + delimiter + ')';\n  return [code, JavaScript.ORDER_FUNCTION_CALL];\n};\n\nJavaScript['lists_reverse'] = function(block) {\n  // Block for reversing a list.\n  const list =\n      JavaScript.valueToCode(block, 'LIST', JavaScript.ORDER_FUNCTION_CALL) ||\n      '[]';\n  const code = list + '.slice().reverse()';\n  return [code, JavaScript.ORDER_FUNCTION_CALL];\n};\n","/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generating JavaScript for logic blocks.\n */\n'use strict';\n\ngoog.module('Blockly.JavaScript.logic');\n\nconst {javascriptGenerator: JavaScript} = goog.require('Blockly.JavaScript');\n\n\nJavaScript['controls_if'] = function(block) {\n  // If/elseif/else condition.\n  let n = 0;\n  let code = '';\n  if (JavaScript.STATEMENT_PREFIX) {\n    // Automatic prefix insertion is switched off for this block.  Add manually.\n    code += JavaScript.injectId(JavaScript.STATEMENT_PREFIX, block);\n  }\n  do {\n    const conditionCode =\n        JavaScript.valueToCode(block, 'IF' + n, JavaScript.ORDER_NONE) ||\n        'false';\n    let branchCode = JavaScript.statementToCode(block, 'DO' + n);\n    if (JavaScript.STATEMENT_SUFFIX) {\n      branchCode = JavaScript.prefixLines(\n                       JavaScript.injectId(JavaScript.STATEMENT_SUFFIX, block),\n                       JavaScript.INDENT) +\n          branchCode;\n    }\n    code += (n > 0 ? ' else ' : '') + 'if (' + conditionCode + ') {\\n' +\n        branchCode + '}';\n    n++;\n  } while (block.getInput('IF' + n));\n\n  if (block.getInput('ELSE') || JavaScript.STATEMENT_SUFFIX) {\n    let branchCode = JavaScript.statementToCode(block, 'ELSE');\n    if (JavaScript.STATEMENT_SUFFIX) {\n      branchCode = JavaScript.prefixLines(\n                       JavaScript.injectId(JavaScript.STATEMENT_SUFFIX, block),\n                       JavaScript.INDENT) +\n          branchCode;\n    }\n    code += ' else {\\n' + branchCode + '}';\n  }\n  return code + '\\n';\n};\n\nJavaScript['controls_ifelse'] = JavaScript['controls_if'];\n\nJavaScript['logic_compare'] = function(block) {\n  // Comparison operator.\n  const OPERATORS =\n      {'EQ': '==', 'NEQ': '!=', 'LT': '<', 'LTE': '<=', 'GT': '>', 'GTE': '>='};\n  const operator = OPERATORS[block.getFieldValue('OP')];\n  const order = (operator === '==' || operator === '!=') ?\n      JavaScript.ORDER_EQUALITY :\n      JavaScript.ORDER_RELATIONAL;\n  const argument0 = JavaScript.valueToCode(block, 'A', order) || '0';\n  const argument1 = JavaScript.valueToCode(block, 'B', order) || '0';\n  const code = argument0 + ' ' + operator + ' ' + argument1;\n  return [code, order];\n};\n\nJavaScript['logic_operation'] = function(block) {\n  // Operations 'and', 'or'.\n  const operator = (block.getFieldValue('OP') === 'AND') ? '&&' : '||';\n  const order = (operator === '&&') ? JavaScript.ORDER_LOGICAL_AND :\n                                      JavaScript.ORDER_LOGICAL_OR;\n  let argument0 = JavaScript.valueToCode(block, 'A', order);\n  let argument1 = JavaScript.valueToCode(block, 'B', order);\n  if (!argument0 && !argument1) {\n    // If there are no arguments, then the return value is false.\n    argument0 = 'false';\n    argument1 = 'false';\n  } else {\n    // Single missing arguments have no effect on the return value.\n    const defaultArgument = (operator === '&&') ? 'true' : 'false';\n    if (!argument0) {\n      argument0 = defaultArgument;\n    }\n    if (!argument1) {\n      argument1 = defaultArgument;\n    }\n  }\n  const code = argument0 + ' ' + operator + ' ' + argument1;\n  return [code, order];\n};\n\nJavaScript['logic_negate'] = function(block) {\n  // Negation.\n  const order = JavaScript.ORDER_LOGICAL_NOT;\n  const argument0 = JavaScript.valueToCode(block, 'BOOL', order) || 'true';\n  const code = '!' + argument0;\n  return [code, order];\n};\n\nJavaScript['logic_boolean'] = function(block) {\n  // Boolean values true and false.\n  const code = (block.getFieldValue('BOOL') === 'TRUE') ? 'true' : 'false';\n  return [code, JavaScript.ORDER_ATOMIC];\n};\n\nJavaScript['logic_null'] = function(block) {\n  // Null data type.\n  return ['null', JavaScript.ORDER_ATOMIC];\n};\n\nJavaScript['logic_ternary'] = function(block) {\n  // Ternary operator.\n  const value_if =\n      JavaScript.valueToCode(block, 'IF', JavaScript.ORDER_CONDITIONAL) ||\n      'false';\n  const value_then =\n      JavaScript.valueToCode(block, 'THEN', JavaScript.ORDER_CONDITIONAL) ||\n      'null';\n  const value_else =\n      JavaScript.valueToCode(block, 'ELSE', JavaScript.ORDER_CONDITIONAL) ||\n      'null';\n  const code = value_if + ' ? ' + value_then + ' : ' + value_else;\n  return [code, JavaScript.ORDER_CONDITIONAL];\n};\n","/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generating JavaScript for loop blocks.\n */\n'use strict';\n\ngoog.module('Blockly.JavaScript.loops');\n\nconst stringUtils = goog.require('Blockly.utils.string');\nconst {NameType} = goog.require('Blockly.Names');\nconst {javascriptGenerator: JavaScript} = goog.require('Blockly.JavaScript');\n\n\nJavaScript['controls_repeat_ext'] = function(block) {\n  // Repeat n times.\n  let repeats;\n  if (block.getField('TIMES')) {\n    // Internal number.\n    repeats = String(Number(block.getFieldValue('TIMES')));\n  } else {\n    // External number.\n    repeats =\n        JavaScript.valueToCode(block, 'TIMES', JavaScript.ORDER_ASSIGNMENT) ||\n        '0';\n  }\n  let branch = JavaScript.statementToCode(block, 'DO');\n  branch = JavaScript.addLoopTrap(branch, block);\n  let code = '';\n  const loopVar =\n      JavaScript.nameDB_.getDistinctName('count', NameType.VARIABLE);\n  let endVar = repeats;\n  if (!repeats.match(/^\\w+$/) && !stringUtils.isNumber(repeats)) {\n    endVar =\n        JavaScript.nameDB_.getDistinctName('repeat_end', NameType.VARIABLE);\n    code += 'var ' + endVar + ' = ' + repeats + ';\\n';\n  }\n  code += 'for (var ' + loopVar + ' = 0; ' + loopVar + ' < ' + endVar + '; ' +\n      loopVar + '++) {\\n' + branch + '}\\n';\n  return code;\n};\n\nJavaScript['controls_repeat'] = JavaScript['controls_repeat_ext'];\n\nJavaScript['controls_whileUntil'] = function(block) {\n  // Do while/until loop.\n  const until = block.getFieldValue('MODE') === 'UNTIL';\n  let argument0 =\n      JavaScript.valueToCode(\n          block, 'BOOL',\n          until ? JavaScript.ORDER_LOGICAL_NOT : JavaScript.ORDER_NONE) ||\n      'false';\n  let branch = JavaScript.statementToCode(block, 'DO');\n  branch = JavaScript.addLoopTrap(branch, block);\n  if (until) {\n    argument0 = '!' + argument0;\n  }\n  return 'while (' + argument0 + ') {\\n' + branch + '}\\n';\n};\n\nJavaScript['controls_for'] = function(block) {\n  // For loop.\n  const variable0 =\n      JavaScript.nameDB_.getName(block.getFieldValue('VAR'), NameType.VARIABLE);\n  const argument0 =\n      JavaScript.valueToCode(block, 'FROM', JavaScript.ORDER_ASSIGNMENT) || '0';\n  const argument1 =\n      JavaScript.valueToCode(block, 'TO', JavaScript.ORDER_ASSIGNMENT) || '0';\n  const increment =\n      JavaScript.valueToCode(block, 'BY', JavaScript.ORDER_ASSIGNMENT) || '1';\n  let branch = JavaScript.statementToCode(block, 'DO');\n  branch = JavaScript.addLoopTrap(branch, block);\n  let code;\n  if (stringUtils.isNumber(argument0) && stringUtils.isNumber(argument1) &&\n      stringUtils.isNumber(increment)) {\n    // All arguments are simple numbers.\n    const up = Number(argument0) <= Number(argument1);\n    code = 'for (' + variable0 + ' = ' + argument0 + '; ' + variable0 +\n        (up ? ' <= ' : ' >= ') + argument1 + '; ' + variable0;\n    const step = Math.abs(Number(increment));\n    if (step === 1) {\n      code += up ? '++' : '--';\n    } else {\n      code += (up ? ' += ' : ' -= ') + step;\n    }\n    code += ') {\\n' + branch + '}\\n';\n  } else {\n    code = '';\n    // Cache non-trivial values to variables to prevent repeated look-ups.\n    let startVar = argument0;\n    if (!argument0.match(/^\\w+$/) && !stringUtils.isNumber(argument0)) {\n      startVar = JavaScript.nameDB_.getDistinctName(\n          variable0 + '_start', NameType.VARIABLE);\n      code += 'var ' + startVar + ' = ' + argument0 + ';\\n';\n    }\n    let endVar = argument1;\n    if (!argument1.match(/^\\w+$/) && !stringUtils.isNumber(argument1)) {\n      endVar = JavaScript.nameDB_.getDistinctName(\n          variable0 + '_end', NameType.VARIABLE);\n      code += 'var ' + endVar + ' = ' + argument1 + ';\\n';\n    }\n    // Determine loop direction at start, in case one of the bounds\n    // changes during loop execution.\n    const incVar = JavaScript.nameDB_.getDistinctName(\n        variable0 + '_inc', NameType.VARIABLE);\n    code += 'var ' + incVar + ' = ';\n    if (stringUtils.isNumber(increment)) {\n      code += Math.abs(increment) + ';\\n';\n    } else {\n      code += 'Math.abs(' + increment + ');\\n';\n    }\n    code += 'if (' + startVar + ' > ' + endVar + ') {\\n';\n    code += JavaScript.INDENT + incVar + ' = -' + incVar + ';\\n';\n    code += '}\\n';\n    code += 'for (' + variable0 + ' = ' + startVar + '; ' + incVar +\n        ' >= 0 ? ' + variable0 + ' <= ' + endVar + ' : ' + variable0 +\n        ' >= ' + endVar + '; ' + variable0 + ' += ' + incVar + ') {\\n' +\n        branch + '}\\n';\n  }\n  return code;\n};\n\nJavaScript['controls_forEach'] = function(block) {\n  // For each loop.\n  const variable0 =\n      JavaScript.nameDB_.getName(block.getFieldValue('VAR'), NameType.VARIABLE);\n  const argument0 =\n      JavaScript.valueToCode(block, 'LIST', JavaScript.ORDER_ASSIGNMENT) ||\n      '[]';\n  let branch = JavaScript.statementToCode(block, 'DO');\n  branch = JavaScript.addLoopTrap(branch, block);\n  let code = '';\n  // Cache non-trivial values to variables to prevent repeated look-ups.\n  let listVar = argument0;\n  if (!argument0.match(/^\\w+$/)) {\n    listVar = JavaScript.nameDB_.getDistinctName(\n        variable0 + '_list', NameType.VARIABLE);\n    code += 'var ' + listVar + ' = ' + argument0 + ';\\n';\n  }\n  const indexVar = JavaScript.nameDB_.getDistinctName(\n      variable0 + '_index', NameType.VARIABLE);\n  branch = JavaScript.INDENT + variable0 + ' = ' + listVar + '[' + indexVar +\n      '];\\n' + branch;\n  code += 'for (var ' + indexVar + ' in ' + listVar + ') {\\n' + branch + '}\\n';\n  return code;\n};\n\nJavaScript['controls_flow_statements'] = function(block) {\n  // Flow statements: continue, break.\n  let xfix = '';\n  if (JavaScript.STATEMENT_PREFIX) {\n    // Automatic prefix insertion is switched off for this block.  Add manually.\n    xfix += JavaScript.injectId(JavaScript.STATEMENT_PREFIX, block);\n  }\n  if (JavaScript.STATEMENT_SUFFIX) {\n    // Inject any statement suffix here since the regular one at the end\n    // will not get executed if the break/continue is triggered.\n    xfix += JavaScript.injectId(JavaScript.STATEMENT_SUFFIX, block);\n  }\n  if (JavaScript.STATEMENT_PREFIX) {\n    const loop = block.getSurroundLoop();\n    if (loop && !loop.suppressPrefixSuffix) {\n      // Inject loop's statement prefix here since the regular one at the end\n      // of the loop will not get executed if 'continue' is triggered.\n      // In the case of 'break', a prefix is needed due to the loop's suffix.\n      xfix += JavaScript.injectId(JavaScript.STATEMENT_PREFIX, loop);\n    }\n  }\n  switch (block.getFieldValue('FLOW')) {\n    case 'BREAK':\n      return xfix + 'break;\\n';\n    case 'CONTINUE':\n      return xfix + 'continue;\\n';\n  }\n  throw Error('Unknown flow statement.');\n};\n","/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generating JavaScript for math blocks.\n * @suppress {missingRequire}\n */\n'use strict';\n\ngoog.module('Blockly.JavaScript.math');\n\nconst {NameType} = goog.require('Blockly.Names');\nconst {javascriptGenerator: JavaScript} = goog.require('Blockly.JavaScript');\n\n\nJavaScript['math_number'] = function(block) {\n  // Numeric value.\n  const code = Number(block.getFieldValue('NUM'));\n  const order = code >= 0 ? JavaScript.ORDER_ATOMIC :\n              JavaScript.ORDER_UNARY_NEGATION;\n  return [code, order];\n};\n\nJavaScript['math_arithmetic'] = function(block) {\n  // Basic arithmetic operators, and power.\n  const OPERATORS = {\n    'ADD': [' + ', JavaScript.ORDER_ADDITION],\n    'MINUS': [' - ', JavaScript.ORDER_SUBTRACTION],\n    'MULTIPLY': [' * ', JavaScript.ORDER_MULTIPLICATION],\n    'DIVIDE': [' / ', JavaScript.ORDER_DIVISION],\n    'POWER': [null, JavaScript.ORDER_NONE],  // Handle power separately.\n  };\n  const tuple = OPERATORS[block.getFieldValue('OP')];\n  const operator = tuple[0];\n  const order = tuple[1];\n  const argument0 = JavaScript.valueToCode(block, 'A', order) || '0';\n  const argument1 = JavaScript.valueToCode(block, 'B', order) || '0';\n  let code;\n  // Power in JavaScript requires a special case since it has no operator.\n  if (!operator) {\n    code = 'Math.pow(' + argument0 + ', ' + argument1 + ')';\n    return [code, JavaScript.ORDER_FUNCTION_CALL];\n  }\n  code = argument0 + operator + argument1;\n  return [code, order];\n};\n\nJavaScript['math_single'] = function(block) {\n  // Math operators with single operand.\n  const operator = block.getFieldValue('OP');\n  let code;\n  let arg;\n  if (operator === 'NEG') {\n    // Negation is a special case given its different operator precedence.\n    arg = JavaScript.valueToCode(block, 'NUM',\n        JavaScript.ORDER_UNARY_NEGATION) || '0';\n    if (arg[0] === '-') {\n      // --3 is not legal in JS.\n      arg = ' ' + arg;\n    }\n    code = '-' + arg;\n    return [code, JavaScript.ORDER_UNARY_NEGATION];\n  }\n  if (operator === 'SIN' || operator === 'COS' || operator === 'TAN') {\n    arg = JavaScript.valueToCode(block, 'NUM',\n        JavaScript.ORDER_DIVISION) || '0';\n  } else {\n    arg = JavaScript.valueToCode(block, 'NUM',\n        JavaScript.ORDER_NONE) || '0';\n  }\n  // First, handle cases which generate values that don't need parentheses\n  // wrapping the code.\n  switch (operator) {\n    case 'ABS':\n      code = 'Math.abs(' + arg + ')';\n      break;\n    case 'ROOT':\n      code = 'Math.sqrt(' + arg + ')';\n      break;\n    case 'LN':\n      code = 'Math.log(' + arg + ')';\n      break;\n    case 'EXP':\n      code = 'Math.exp(' + arg + ')';\n      break;\n    case 'POW10':\n      code = 'Math.pow(10,' + arg + ')';\n      break;\n    case 'ROUND':\n      code = 'Math.round(' + arg + ')';\n      break;\n    case 'ROUNDUP':\n      code = 'Math.ceil(' + arg + ')';\n      break;\n    case 'ROUNDDOWN':\n      code = 'Math.floor(' + arg + ')';\n      break;\n    case 'SIN':\n      code = 'Math.sin(' + arg + ' / 180 * Math.PI)';\n      break;\n    case 'COS':\n      code = 'Math.cos(' + arg + ' / 180 * Math.PI)';\n      break;\n    case 'TAN':\n      code = 'Math.tan(' + arg + ' / 180 * Math.PI)';\n      break;\n  }\n  if (code) {\n    return [code, JavaScript.ORDER_FUNCTION_CALL];\n  }\n  // Second, handle cases which generate values that may need parentheses\n  // wrapping the code.\n  switch (operator) {\n    case 'LOG10':\n      code = 'Math.log(' + arg + ') / Math.log(10)';\n      break;\n    case 'ASIN':\n      code = 'Math.asin(' + arg + ') / Math.PI * 180';\n      break;\n    case 'ACOS':\n      code = 'Math.acos(' + arg + ') / Math.PI * 180';\n      break;\n    case 'ATAN':\n      code = 'Math.atan(' + arg + ') / Math.PI * 180';\n      break;\n    default:\n      throw Error('Unknown math operator: ' + operator);\n  }\n  return [code, JavaScript.ORDER_DIVISION];\n};\n\nJavaScript['math_constant'] = function(block) {\n  // Constants: PI, E, the Golden Ratio, sqrt(2), 1/sqrt(2), INFINITY.\n  const CONSTANTS = {\n    'PI': ['Math.PI', JavaScript.ORDER_MEMBER],\n    'E': ['Math.E', JavaScript.ORDER_MEMBER],\n    'GOLDEN_RATIO': ['(1 + Math.sqrt(5)) / 2', JavaScript.ORDER_DIVISION],\n    'SQRT2': ['Math.SQRT2', JavaScript.ORDER_MEMBER],\n    'SQRT1_2': ['Math.SQRT1_2', JavaScript.ORDER_MEMBER],\n    'INFINITY': ['Infinity', JavaScript.ORDER_ATOMIC],\n  };\n  return CONSTANTS[block.getFieldValue('CONSTANT')];\n};\n\nJavaScript['math_number_property'] = function(block) {\n  // Check if a number is even, odd, prime, whole, positive, or negative\n  // or if it is divisible by certain number. Returns true or false.\n  const PROPERTIES = {\n    'EVEN': [' % 2 === 0', JavaScript.ORDER_MODULUS, JavaScript.ORDER_EQUALITY],\n    'ODD': [' % 2 === 1', JavaScript.ORDER_MODULUS, JavaScript.ORDER_EQUALITY],\n    'WHOLE': [' % 1 === 0', JavaScript.ORDER_MODULUS,\n        JavaScript.ORDER_EQUALITY],\n    'POSITIVE': [' > 0', JavaScript.ORDER_RELATIONAL,\n        JavaScript.ORDER_RELATIONAL],\n    'NEGATIVE': [' < 0', JavaScript.ORDER_RELATIONAL,\n        JavaScript.ORDER_RELATIONAL],\n    'DIVISIBLE_BY': [null, JavaScript.ORDER_MODULUS, JavaScript.ORDER_EQUALITY],\n    'PRIME': [null, JavaScript.ORDER_NONE, JavaScript.ORDER_FUNCTION_CALL],\n  };\n  const dropdownProperty = block.getFieldValue('PROPERTY');\n  const [suffix, inputOrder, outputOrder] = PROPERTIES[dropdownProperty];\n  const numberToCheck = JavaScript.valueToCode(block, 'NUMBER_TO_CHECK',\n      inputOrder) || '0';\n  let code;\n  if (dropdownProperty === 'PRIME') {\n    // Prime is a special case as it is not a one-liner test.\n    const functionName = JavaScript.provideFunction_('mathIsPrime', `\nfunction ${JavaScript.FUNCTION_NAME_PLACEHOLDER_}(n) {\n  // https://en.wikipedia.org/wiki/Primality_test#Naive_methods\n  if (n == 2 || n == 3) {\n    return true;\n  }\n  // False if n is NaN, negative, is 1, or not whole.\n  // And false if n is divisible by 2 or 3.\n  if (isNaN(n) || n <= 1 || n % 1 !== 0 || n % 2 === 0 || n % 3 === 0) {\n    return false;\n  }\n  // Check all the numbers of form 6k +/- 1, up to sqrt(n).\n  for (var x = 6; x <= Math.sqrt(n) + 1; x += 6) {\n    if (n % (x - 1) === 0 || n % (x + 1) === 0) {\n      return false;\n    }\n  }\n  return true;\n}\n`);\n    code = functionName + '(' + numberToCheck + ')';\n  } else if (dropdownProperty === 'DIVISIBLE_BY') {\n    const divisor = JavaScript.valueToCode(block, 'DIVISOR',\n        JavaScript.ORDER_MODULUS) || '0';\n    code = numberToCheck + ' % ' + divisor + ' === 0';\n  } else {\n    code = numberToCheck + suffix;\n  }\n  return [code, outputOrder];\n};\n\nJavaScript['math_change'] = function(block) {\n  // Add to a variable in place.\n  const argument0 = JavaScript.valueToCode(block, 'DELTA',\n      JavaScript.ORDER_ADDITION) || '0';\n  const varName = JavaScript.nameDB_.getName(\n      block.getFieldValue('VAR'), NameType.VARIABLE);\n  return varName + ' = (typeof ' + varName + ' === \\'number\\' ? ' + varName +\n      ' : 0) + ' + argument0 + ';\\n';\n};\n\n// Rounding functions have a single operand.\nJavaScript['math_round'] = JavaScript['math_single'];\n// Trigonometry functions have a single operand.\nJavaScript['math_trig'] = JavaScript['math_single'];\n\nJavaScript['math_on_list'] = function(block) {\n  // Math functions for lists.\n  const func = block.getFieldValue('OP');\n  let list;\n  let code;\n  switch (func) {\n    case 'SUM':\n      list = JavaScript.valueToCode(block, 'LIST',\n          JavaScript.ORDER_MEMBER) || '[]';\n      code = list + '.reduce(function(x, y) {return x + y;}, 0)';\n      break;\n    case 'MIN':\n      list = JavaScript.valueToCode(block, 'LIST',\n          JavaScript.ORDER_NONE) || '[]';\n      code = 'Math.min.apply(null, ' + list + ')';\n      break;\n    case 'MAX':\n      list = JavaScript.valueToCode(block, 'LIST',\n          JavaScript.ORDER_NONE) || '[]';\n      code = 'Math.max.apply(null, ' + list + ')';\n      break;\n    case 'AVERAGE': {\n      // mathMean([null,null,1,3]) === 2.0.\n      const functionName = JavaScript.provideFunction_('mathMean', `\nfunction ${JavaScript.FUNCTION_NAME_PLACEHOLDER_}(myList) {\n  return myList.reduce(function(x, y) {return x + y;}, 0) / myList.length;\n}\n`);\n      list = JavaScript.valueToCode(block, 'LIST',\n          JavaScript.ORDER_NONE) || '[]';\n      code = functionName + '(' + list + ')';\n      break;\n    }\n    case 'MEDIAN': {\n      // mathMedian([null,null,1,3]) === 2.0.\n      const functionName = JavaScript.provideFunction_('mathMedian', `\nfunction ${JavaScript.FUNCTION_NAME_PLACEHOLDER_}(myList) {\n  var localList = myList.filter(function (x) {return typeof x === 'number';});\n  if (!localList.length) return null;\n  localList.sort(function(a, b) {return b - a;});\n  if (localList.length % 2 === 0) {\n    return (localList[localList.length / 2 - 1] + localList[localList.length / 2]) / 2;\n  } else {\n    return localList[(localList.length - 1) / 2];\n  }\n}\n`);\n      list = JavaScript.valueToCode(block, 'LIST',\n          JavaScript.ORDER_NONE) || '[]';\n      code = functionName + '(' + list + ')';\n      break;\n    }\n    case 'MODE': {\n      // As a list of numbers can contain more than one mode,\n      // the returned result is provided as an array.\n      // Mode of [3, 'x', 'x', 1, 1, 2, '3'] -> ['x', 1].\n      const functionName = JavaScript.provideFunction_('mathModes', `\nfunction ${JavaScript.FUNCTION_NAME_PLACEHOLDER_}(values) {\n  var modes = [];\n  var counts = [];\n  var maxCount = 0;\n  for (var i = 0; i < values.length; i++) {\n    var value = values[i];\n    var found = false;\n    var thisCount;\n    for (var j = 0; j < counts.length; j++) {\n      if (counts[j][0] === value) {\n        thisCount = ++counts[j][1];\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      counts.push([value, 1]);\n      thisCount = 1;\n    }\n    maxCount = Math.max(thisCount, maxCount);\n  }\n  for (var j = 0; j < counts.length; j++) {\n    if (counts[j][1] === maxCount) {\n        modes.push(counts[j][0]);\n    }\n  }\n  return modes;\n}\n`);\n      list = JavaScript.valueToCode(block, 'LIST',\n          JavaScript.ORDER_NONE) || '[]';\n      code = functionName + '(' + list + ')';\n      break;\n    }\n    case 'STD_DEV': {\n      const functionName = JavaScript.provideFunction_('mathStandardDeviation', `\nfunction ${JavaScript.FUNCTION_NAME_PLACEHOLDER_}(numbers) {\n  var n = numbers.length;\n  if (!n) return null;\n  var mean = numbers.reduce(function(x, y) {return x + y;}) / n;\n  var variance = 0;\n  for (var j = 0; j < n; j++) {\n    variance += Math.pow(numbers[j] - mean, 2);\n  }\n  variance = variance / n;\n  return Math.sqrt(variance);\n}\n`);\n      list = JavaScript.valueToCode(block, 'LIST',\n          JavaScript.ORDER_NONE) || '[]';\n      code = functionName + '(' + list + ')';\n      break;\n    }\n    case 'RANDOM': {\n      const functionName = JavaScript.provideFunction_('mathRandomList', `\nfunction ${JavaScript.FUNCTION_NAME_PLACEHOLDER_}(list) {\n  var x = Math.floor(Math.random() * list.length);\n  return list[x];\n}\n`);\n      list = JavaScript.valueToCode(block, 'LIST',\n          JavaScript.ORDER_NONE) || '[]';\n      code = functionName + '(' + list + ')';\n      break;\n    }\n    default:\n      throw Error('Unknown operator: ' + func);\n  }\n  return [code, JavaScript.ORDER_FUNCTION_CALL];\n};\n\nJavaScript['math_modulo'] = function(block) {\n  // Remainder computation.\n  const argument0 = JavaScript.valueToCode(block, 'DIVIDEND',\n      JavaScript.ORDER_MODULUS) || '0';\n  const argument1 = JavaScript.valueToCode(block, 'DIVISOR',\n      JavaScript.ORDER_MODULUS) || '0';\n  const code = argument0 + ' % ' + argument1;\n  return [code, JavaScript.ORDER_MODULUS];\n};\n\nJavaScript['math_constrain'] = function(block) {\n  // Constrain a number between two limits.\n  const argument0 = JavaScript.valueToCode(block, 'VALUE',\n      JavaScript.ORDER_NONE) || '0';\n  const argument1 = JavaScript.valueToCode(block, 'LOW',\n      JavaScript.ORDER_NONE) || '0';\n  const argument2 = JavaScript.valueToCode(block, 'HIGH',\n      JavaScript.ORDER_NONE) || 'Infinity';\n  const code = 'Math.min(Math.max(' + argument0 + ', ' + argument1 + '), ' +\n      argument2 + ')';\n  return [code, JavaScript.ORDER_FUNCTION_CALL];\n};\n\nJavaScript['math_random_int'] = function(block) {\n  // Random integer between [X] and [Y].\n  const argument0 = JavaScript.valueToCode(block, 'FROM',\n      JavaScript.ORDER_NONE) || '0';\n  const argument1 = JavaScript.valueToCode(block, 'TO',\n      JavaScript.ORDER_NONE) || '0';\n  const functionName = JavaScript.provideFunction_('mathRandomInt', `\nfunction ${JavaScript.FUNCTION_NAME_PLACEHOLDER_}(a, b) {\n  if (a > b) {\n    // Swap a and b to ensure a is smaller.\n    var c = a;\n    a = b;\n    b = c;\n  }\n  return Math.floor(Math.random() * (b - a + 1) + a);\n}\n`);\n  const code = functionName + '(' + argument0 + ', ' + argument1 + ')';\n  return [code, JavaScript.ORDER_FUNCTION_CALL];\n};\n\nJavaScript['math_random_float'] = function(block) {\n  // Random fraction between 0 and 1.\n  return ['Math.random()', JavaScript.ORDER_FUNCTION_CALL];\n};\n\nJavaScript['math_atan2'] = function(block) {\n  // Arctangent of point (X, Y) in degrees from -180 to 180.\n  const argument0 = JavaScript.valueToCode(block, 'X',\n      JavaScript.ORDER_NONE) || '0';\n  const argument1 = JavaScript.valueToCode(block, 'Y',\n      JavaScript.ORDER_NONE) || '0';\n  return ['Math.atan2(' + argument1 + ', ' + argument0 + ') / Math.PI * 180',\n      JavaScript.ORDER_DIVISION];\n};\n","/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generating JavaScript for procedure blocks.\n */\n'use strict';\n\ngoog.module('Blockly.JavaScript.procedures');\n\nconst {NameType} = goog.require('Blockly.Names');\nconst {javascriptGenerator: JavaScript} = goog.require('Blockly.JavaScript');\n\n\nJavaScript['procedures_defreturn'] = function(block) {\n  // Define a procedure with a return value.\n  const funcName = JavaScript.nameDB_.getName(\n      block.getFieldValue('NAME'), NameType.PROCEDURE);\n  let xfix1 = '';\n  if (JavaScript.STATEMENT_PREFIX) {\n    xfix1 += JavaScript.injectId(JavaScript.STATEMENT_PREFIX, block);\n  }\n  if (JavaScript.STATEMENT_SUFFIX) {\n    xfix1 += JavaScript.injectId(JavaScript.STATEMENT_SUFFIX, block);\n  }\n  if (xfix1) {\n    xfix1 = JavaScript.prefixLines(xfix1, JavaScript.INDENT);\n  }\n  let loopTrap = '';\n  if (JavaScript.INFINITE_LOOP_TRAP) {\n    loopTrap = JavaScript.prefixLines(\n        JavaScript.injectId(JavaScript.INFINITE_LOOP_TRAP, block),\n        JavaScript.INDENT);\n  }\n  const branch = JavaScript.statementToCode(block, 'STACK');\n  let returnValue =\n      JavaScript.valueToCode(block, 'RETURN', JavaScript.ORDER_NONE) || '';\n  let xfix2 = '';\n  if (branch && returnValue) {\n    // After executing the function body, revisit this block for the return.\n    xfix2 = xfix1;\n  }\n  if (returnValue) {\n    returnValue = JavaScript.INDENT + 'return ' + returnValue + ';\\n';\n  }\n  const args = [];\n  const variables = block.getVars();\n  for (let i = 0; i < variables.length; i++) {\n    args[i] = JavaScript.nameDB_.getName(variables[i], NameType.VARIABLE);\n  }\n  let code = 'function ' + funcName + '(' + args.join(', ') + ') {\\n' + xfix1 +\n      loopTrap + branch + xfix2 + returnValue + '}';\n  code = JavaScript.scrub_(block, code);\n  // Add % so as not to collide with helper functions in definitions list.\n  JavaScript.definitions_['%' + funcName] = code;\n  return null;\n};\n\n// Defining a procedure without a return value uses the same generator as\n// a procedure with a return value.\nJavaScript['procedures_defnoreturn'] = JavaScript['procedures_defreturn'];\n\nJavaScript['procedures_callreturn'] = function(block) {\n  // Call a procedure with a return value.\n  const funcName = JavaScript.nameDB_.getName(\n      block.getFieldValue('NAME'), NameType.PROCEDURE);\n  const args = [];\n  const variables = block.getVars();\n  for (let i = 0; i < variables.length; i++) {\n    args[i] = JavaScript.valueToCode(block, 'ARG' + i, JavaScript.ORDER_NONE) ||\n        'null';\n  }\n  const code = funcName + '(' + args.join(', ') + ')';\n  return [code, JavaScript.ORDER_FUNCTION_CALL];\n};\n\nJavaScript['procedures_callnoreturn'] = function(block) {\n  // Call a procedure with no return value.\n  // Generated code is for a function call as a statement is the same as a\n  // function call as a value, with the addition of line ending.\n  const tuple = JavaScript['procedures_callreturn'](block);\n  return tuple[0] + ';\\n';\n};\n\nJavaScript['procedures_ifreturn'] = function(block) {\n  // Conditionally return value from a procedure.\n  const condition =\n      JavaScript.valueToCode(block, 'CONDITION', JavaScript.ORDER_NONE) ||\n      'false';\n  let code = 'if (' + condition + ') {\\n';\n  if (JavaScript.STATEMENT_SUFFIX) {\n    // Inject any statement suffix here since the regular one at the end\n    // will not get executed if the return is triggered.\n    code += JavaScript.prefixLines(\n        JavaScript.injectId(JavaScript.STATEMENT_SUFFIX, block),\n        JavaScript.INDENT);\n  }\n  if (block.hasReturnValue_) {\n    const value =\n        JavaScript.valueToCode(block, 'VALUE', JavaScript.ORDER_NONE) || 'null';\n    code += JavaScript.INDENT + 'return ' + value + ';\\n';\n  } else {\n    code += JavaScript.INDENT + 'return;\\n';\n  }\n  code += '}\\n';\n  return code;\n};\n","/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generating JavaScript for text blocks.\n */\n'use strict';\n\ngoog.module('Blockly.JavaScript.texts');\n\nconst {NameType} = goog.require('Blockly.Names');\nconst {javascriptGenerator: JavaScript} = goog.require('Blockly.JavaScript');\n\n\n/**\n * Regular expression to detect a single-quoted string literal.\n */\nconst strRegExp = /^\\s*'([^']|\\\\')*'\\s*$/;\n\n/**\n * Enclose the provided value in 'String(...)' function.\n * Leave string literals alone.\n * @param {string} value Code evaluating to a value.\n * @return {Array<string|number>} Array containing code evaluating to a string\n *     and the order of the returned code.[string, number]\n */\nconst forceString = function(value) {\n  if (strRegExp.test(value)) {\n    return [value, JavaScript.ORDER_ATOMIC];\n  }\n  return ['String(' + value + ')', JavaScript.ORDER_FUNCTION_CALL];\n};\n\n/**\n * Returns an expression calculating the index into a string.\n * @param {string} stringName Name of the string, used to calculate length.\n * @param {string} where The method of indexing, selected by dropdown in Blockly\n * @param {string=} opt_at The optional offset when indexing from start/end.\n * @return {string|undefined} Index expression.\n */\nconst getSubstringIndex = function(stringName, where, opt_at) {\n  if (where === 'FIRST') {\n    return '0';\n  } else if (where === 'FROM_END') {\n    return stringName + '.length - 1 - ' + opt_at;\n  } else if (where === 'LAST') {\n    return stringName + '.length - 1';\n  } else {\n    return opt_at;\n  }\n};\n\nJavaScript['text'] = function(block) {\n  // Text value.\n  const code = JavaScript.quote_(block.getFieldValue('TEXT'));\n  return [code, JavaScript.ORDER_ATOMIC];\n};\n\nJavaScript['text_multiline'] = function(block) {\n  // Text value.\n  const code = JavaScript.multiline_quote_(block.getFieldValue('TEXT'));\n  const order = code.indexOf('+') !== -1 ? JavaScript.ORDER_ADDITION :\n      JavaScript.ORDER_ATOMIC;\n  return [code, order];\n};\n\nJavaScript['text_join'] = function(block) {\n  // Create a string made up of any number of elements of any type.\n  switch (block.itemCount_) {\n    case 0:\n      return [\"''\", JavaScript.ORDER_ATOMIC];\n    case 1: {\n      const element = JavaScript.valueToCode(block, 'ADD0',\n          JavaScript.ORDER_NONE) || \"''\";\n      const codeAndOrder = forceString(element);\n      return codeAndOrder;\n    }\n    case 2: {\n      const element0 = JavaScript.valueToCode(block, 'ADD0',\n          JavaScript.ORDER_NONE) || \"''\";\n      const element1 = JavaScript.valueToCode(block, 'ADD1',\n          JavaScript.ORDER_NONE) || \"''\";\n      const code = forceString(element0)[0] +\n          ' + ' + forceString(element1)[0];\n      return [code, JavaScript.ORDER_ADDITION];\n    }\n    default: {\n      const elements = new Array(block.itemCount_);\n      for (let i = 0; i < block.itemCount_; i++) {\n        elements[i] = JavaScript.valueToCode(block, 'ADD' + i,\n            JavaScript.ORDER_NONE) || \"''\";\n      }\n      const code = '[' + elements.join(',') + '].join(\\'\\')';\n      return [code, JavaScript.ORDER_FUNCTION_CALL];\n    }\n  }\n};\n\nJavaScript['text_append'] = function(block) {\n  // Append to a variable in place.\n  const varName = JavaScript.nameDB_.getName(\n      block.getFieldValue('VAR'), NameType.VARIABLE);\n  const value = JavaScript.valueToCode(block, 'TEXT',\n      JavaScript.ORDER_NONE) || \"''\";\n  const code = varName + ' += ' +\n      forceString(value)[0] + ';\\n';\n  return code;\n};\n\nJavaScript['text_length'] = function(block) {\n  // String or array length.\n  const text = JavaScript.valueToCode(block, 'VALUE',\n      JavaScript.ORDER_MEMBER) || \"''\";\n  return [text + '.length', JavaScript.ORDER_MEMBER];\n};\n\nJavaScript['text_isEmpty'] = function(block) {\n  // Is the string null or array empty?\n  const text = JavaScript.valueToCode(block, 'VALUE',\n      JavaScript.ORDER_MEMBER) || \"''\";\n  return ['!' + text + '.length', JavaScript.ORDER_LOGICAL_NOT];\n};\n\nJavaScript['text_indexOf'] = function(block) {\n  // Search the text for a substring.\n  const operator = block.getFieldValue('END') === 'FIRST' ?\n      'indexOf' : 'lastIndexOf';\n  const substring = JavaScript.valueToCode(block, 'FIND',\n      JavaScript.ORDER_NONE) || \"''\";\n  const text = JavaScript.valueToCode(block, 'VALUE',\n      JavaScript.ORDER_MEMBER) || \"''\";\n  const code = text + '.' + operator + '(' + substring + ')';\n  // Adjust index if using one-based indices.\n  if (block.workspace.options.oneBasedIndex) {\n    return [code + ' + 1', JavaScript.ORDER_ADDITION];\n  }\n  return [code, JavaScript.ORDER_FUNCTION_CALL];\n};\n\nJavaScript['text_charAt'] = function(block) {\n  // Get letter at index.\n  // Note: Until January 2013 this block did not have the WHERE input.\n  const where = block.getFieldValue('WHERE') || 'FROM_START';\n  const textOrder = (where === 'RANDOM') ? JavaScript.ORDER_NONE :\n      JavaScript.ORDER_MEMBER;\n  const text = JavaScript.valueToCode(block, 'VALUE', textOrder) || \"''\";\n  switch (where) {\n    case 'FIRST': {\n      const code = text + '.charAt(0)';\n      return [code, JavaScript.ORDER_FUNCTION_CALL];\n    }\n    case 'LAST': {\n      const code = text + '.slice(-1)';\n      return [code, JavaScript.ORDER_FUNCTION_CALL];\n    }\n    case 'FROM_START': {\n      const at = JavaScript.getAdjusted(block, 'AT');\n      // Adjust index if using one-based indices.\n      const code = text + '.charAt(' + at + ')';\n      return [code, JavaScript.ORDER_FUNCTION_CALL];\n    }\n    case 'FROM_END': {\n      const at = JavaScript.getAdjusted(block, 'AT', 1, true);\n      const code = text + '.slice(' + at + ').charAt(0)';\n      return [code, JavaScript.ORDER_FUNCTION_CALL];\n    }\n    case 'RANDOM': {\n      const functionName = JavaScript.provideFunction_('textRandomLetter', `\nfunction ${JavaScript.FUNCTION_NAME_PLACEHOLDER_}(text) {\n  var x = Math.floor(Math.random() * text.length);\n  return text[x];\n}\n`);\n      const code = functionName + '(' + text + ')';\n      return [code, JavaScript.ORDER_FUNCTION_CALL];\n    }\n  }\n  throw Error('Unhandled option (text_charAt).');\n};\n\nJavaScript['text_getSubstring'] = function(block) {\n  // Get substring.\n  const where1 = block.getFieldValue('WHERE1');\n  const where2 = block.getFieldValue('WHERE2');\n  const requiresLengthCall = (where1 !== 'FROM_END' && where1 !== 'LAST' &&\n      where2 !== 'FROM_END' && where2 !== 'LAST');\n  const textOrder = requiresLengthCall ? JavaScript.ORDER_MEMBER :\n      JavaScript.ORDER_NONE;\n  const text = JavaScript.valueToCode(block, 'STRING', textOrder) || \"''\";\n  let code;\n  if (where1 === 'FIRST' && where2 === 'LAST') {\n    code = text;\n    return [code, JavaScript.ORDER_NONE];\n  } else if (text.match(/^'?\\w+'?$/) || requiresLengthCall) {\n    // If the text is a variable or literal or doesn't require a call for\n    // length, don't generate a helper function.\n    let at1;\n    switch (where1) {\n      case 'FROM_START':\n        at1 = JavaScript.getAdjusted(block, 'AT1');\n        break;\n      case 'FROM_END':\n        at1 = JavaScript.getAdjusted(block, 'AT1', 1, false,\n            JavaScript.ORDER_SUBTRACTION);\n        at1 = text + '.length - ' + at1;\n        break;\n      case 'FIRST':\n        at1 = '0';\n        break;\n      default:\n        throw Error('Unhandled option (text_getSubstring).');\n    }\n    let at2;\n    switch (where2) {\n      case 'FROM_START':\n        at2 = JavaScript.getAdjusted(block, 'AT2', 1);\n        break;\n      case 'FROM_END':\n        at2 = JavaScript.getAdjusted(block, 'AT2', 0, false,\n            JavaScript.ORDER_SUBTRACTION);\n        at2 = text + '.length - ' + at2;\n        break;\n      case 'LAST':\n        at2 = text + '.length';\n        break;\n      default:\n        throw Error('Unhandled option (text_getSubstring).');\n    }\n    code = text + '.slice(' + at1 + ', ' + at2 + ')';\n  } else {\n    const at1 = JavaScript.getAdjusted(block, 'AT1');\n    const at2 = JavaScript.getAdjusted(block, 'AT2');\n    const wherePascalCase = {'FIRST': 'First', 'LAST': 'Last',\n      'FROM_START': 'FromStart', 'FROM_END': 'FromEnd'};\n    // The value for 'FROM_END' and'FROM_START' depends on `at` so\n    // we add it as a parameter.\n    const at1Param =\n        (where1 === 'FROM_END' || where1 === 'FROM_START') ? ', at1' : '';\n    const at2Param =\n        (where2 === 'FROM_END' || where2 === 'FROM_START') ? ', at2' : '';\n    const functionName = JavaScript.provideFunction_(\n        'subsequence' + wherePascalCase[where1] + wherePascalCase[where2], `\nfunction ${JavaScript.FUNCTION_NAME_PLACEHOLDER_}(sequence${at1Param}${at2Param}) {\n  var start = ${getSubstringIndex('sequence', where1, 'at1')};\n  var end = ${getSubstringIndex('sequence', where2, 'at2')} + 1;\n  return sequence.slice(start, end);\n}\n`);\n    code = functionName + '(' + text +\n        // The value for 'FROM_END' and 'FROM_START' depends on `at` so we\n        // pass it.\n        ((where1 === 'FROM_END' || where1 === 'FROM_START') ? ', ' + at1 : '') +\n        ((where2 === 'FROM_END' || where2 === 'FROM_START') ? ', ' + at2 : '') +\n        ')';\n  }\n  return [code, JavaScript.ORDER_FUNCTION_CALL];\n};\n\nJavaScript['text_changeCase'] = function(block) {\n  // Change capitalization.\n  const OPERATORS = {\n    'UPPERCASE': '.toUpperCase()',\n    'LOWERCASE': '.toLowerCase()',\n    'TITLECASE': null,\n  };\n  const operator = OPERATORS[block.getFieldValue('CASE')];\n  const textOrder = operator ? JavaScript.ORDER_MEMBER : JavaScript.ORDER_NONE;\n  const text = JavaScript.valueToCode(block, 'TEXT', textOrder) || \"''\";\n  let code;\n  if (operator) {\n    // Upper and lower case are functions built into JavaScript.\n    code = text + operator;\n  } else {\n    // Title case is not a native JavaScript function.  Define one.\n    const functionName = JavaScript.provideFunction_('textToTitleCase', `\nfunction ${JavaScript.FUNCTION_NAME_PLACEHOLDER_}(str) {\n  return str.replace(/\\\\S+/g,\n      function(txt) {return txt[0].toUpperCase() + txt.substring(1).toLowerCase();});\n}\n`);\n    code = functionName + '(' + text + ')';\n  }\n  return [code, JavaScript.ORDER_FUNCTION_CALL];\n};\n\nJavaScript['text_trim'] = function(block) {\n  // Trim spaces.\n  const OPERATORS = {\n    'LEFT': \".replace(/^[\\\\s\\\\xa0]+/, '')\",\n    'RIGHT': \".replace(/[\\\\s\\\\xa0]+$/, '')\",\n    'BOTH': '.trim()',\n  };\n  const operator = OPERATORS[block.getFieldValue('MODE')];\n  const text = JavaScript.valueToCode(block, 'TEXT',\n      JavaScript.ORDER_MEMBER) || \"''\";\n  return [text + operator, JavaScript.ORDER_FUNCTION_CALL];\n};\n\nJavaScript['text_print'] = function(block) {\n  // Print statement.\n  const msg = JavaScript.valueToCode(block, 'TEXT',\n      JavaScript.ORDER_NONE) || \"''\";\n  return 'window.alert(' + msg + ');\\n';\n};\n\nJavaScript['text_prompt_ext'] = function(block) {\n  // Prompt function.\n  let msg;\n  if (block.getField('TEXT')) {\n    // Internal message.\n    msg = JavaScript.quote_(block.getFieldValue('TEXT'));\n  } else {\n    // External message.\n    msg = JavaScript.valueToCode(block, 'TEXT', JavaScript.ORDER_NONE) || \"''\";\n  }\n  let code = 'window.prompt(' + msg + ')';\n  const toNumber = block.getFieldValue('TYPE') === 'NUMBER';\n  if (toNumber) {\n    code = 'Number(' + code + ')';\n  }\n  return [code, JavaScript.ORDER_FUNCTION_CALL];\n};\n\nJavaScript['text_prompt'] = JavaScript['text_prompt_ext'];\n\nJavaScript['text_count'] = function(block) {\n  const text = JavaScript.valueToCode(block, 'TEXT',\n      JavaScript.ORDER_NONE) || \"''\";\n  const sub = JavaScript.valueToCode(block, 'SUB',\n      JavaScript.ORDER_NONE) || \"''\";\n  const functionName = JavaScript.provideFunction_('textCount', `\nfunction ${JavaScript.FUNCTION_NAME_PLACEHOLDER_}(haystack, needle) {\n  if (needle.length === 0) {\n    return haystack.length + 1;\n  } else {\n    return haystack.split(needle).length - 1;\n  }\n}\n`);\n  const code = functionName + '(' + text + ', ' + sub + ')';\n  return [code, JavaScript.ORDER_FUNCTION_CALL];\n};\n\nJavaScript['text_replace'] = function(block) {\n  const text = JavaScript.valueToCode(block, 'TEXT',\n      JavaScript.ORDER_NONE) || \"''\";\n  const from = JavaScript.valueToCode(block, 'FROM',\n      JavaScript.ORDER_NONE) || \"''\";\n  const to = JavaScript.valueToCode(block, 'TO', JavaScript.ORDER_NONE) || \"''\";\n  // The regex escaping code below is taken from the implementation of\n  // goog.string.regExpEscape.\n  const functionName = JavaScript.provideFunction_('textReplace', `\nfunction ${JavaScript.FUNCTION_NAME_PLACEHOLDER_}(haystack, needle, replacement) {\n  needle = needle.replace(/([-()\\\\[\\\\]{}+?*.$\\\\^|,:#<!\\\\\\\\])/g, '\\\\\\\\$1')\n                 .replace(/\\\\x08/g, '\\\\\\\\x08');\n  return haystack.replace(new RegExp(needle, 'g'), replacement);\n}\n`);\n  const code = functionName + '(' + text + ', ' + from + ', ' + to + ')';\n  return [code, JavaScript.ORDER_FUNCTION_CALL];\n};\n\nJavaScript['text_reverse'] = function(block) {\n  const text = JavaScript.valueToCode(block, 'TEXT',\n      JavaScript.ORDER_MEMBER) || \"''\";\n  const code = text + \".split('').reverse().join('')\";\n  return [code, JavaScript.ORDER_FUNCTION_CALL];\n};\n","/**\n * @license\n * Copyright 2012 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generating JavaScript for variable blocks.\n */\n'use strict';\n\ngoog.module('Blockly.JavaScript.variables');\n\nconst {NameType} = goog.require('Blockly.Names');\nconst {javascriptGenerator: JavaScript} = goog.require('Blockly.JavaScript');\n\n\nJavaScript['variables_get'] = function(block) {\n  // Variable getter.\n  const code = JavaScript.nameDB_.getName(block.getFieldValue('VAR'),\n      NameType.VARIABLE);\n  return [code, JavaScript.ORDER_ATOMIC];\n};\n\nJavaScript['variables_set'] = function(block) {\n  // Variable setter.\n  const argument0 = JavaScript.valueToCode(\n                        block, 'VALUE', JavaScript.ORDER_ASSIGNMENT) || '0';\n  const varName = JavaScript.nameDB_.getName(\n      block.getFieldValue('VAR'), NameType.VARIABLE);\n  return varName + ' = ' + argument0 + ';\\n';\n};\n","/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generating JavaScript for dynamic variable blocks.\n */\n'use strict';\n\ngoog.module('Blockly.JavaScript.variablesDynamic');\n\nconst {javascriptGenerator: JavaScript} = goog.require('Blockly.JavaScript');\n/** @suppress {extraRequire} */\ngoog.require('Blockly.JavaScript.variables');\n\n\n// JavaScript is dynamically typed.\nJavaScript['variables_get_dynamic'] = JavaScript['variables_get'];\nJavaScript['variables_set_dynamic'] = JavaScript['variables_set'];\n","/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Complete helper functions for generating JavaScript for\n *     blocks.  This is the entrypoint for javascript_compressed.js.\n * @suppress {extraRequire}\n */\n'use strict';\n\ngoog.module('Blockly.JavaScript.all');\n\nconst moduleExports = goog.require('Blockly.JavaScript');\ngoog.require('Blockly.JavaScript.colour');\ngoog.require('Blockly.JavaScript.mars_rover');\ngoog.require('Blockly.JavaScript.lists');\ngoog.require('Blockly.JavaScript.logic');\ngoog.require('Blockly.JavaScript.loops');\ngoog.require('Blockly.JavaScript.math');\ngoog.require('Blockly.JavaScript.procedures');\ngoog.require('Blockly.JavaScript.texts');\ngoog.require('Blockly.JavaScript.variables');\ngoog.require('Blockly.JavaScript.variablesDynamic');\n\nexports = moduleExports;\n"]}